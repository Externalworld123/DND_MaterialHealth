<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed." Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_VLOOKUP_Data" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_Categories_Data" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property Name="In_ProcessData" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="MNkey" Type="InOutArgument(x:String)" />
    <x:Property Name="sbin" Type="InArgument(x:String)" />
  </x:Members>
  <this:Process.sbin>
    <InArgument x:TypeArguments="x:String" />
  </this:Process.sbin>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1690,55519</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="60">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="1700,55454" sap2010:WorkflowViewState.IdRef="Sequence_14">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="StepType" />
      <Variable x:TypeArguments="x:Int32" Name="StepNumber" />
      <Variable x:TypeArguments="x:String" Name="HardCode" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1638,71" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[in_TransactionNumber.ToString]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1638,101" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[in_TransactionItem.SpecificContent(&quot;Material_Material_Number_Key&quot;).ToString]" />
    <Assign sap:VirtualizedContainerService.HintSize="1638,70" sap2010:WorkflowViewState.IdRef="Assign_231">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[MNkey]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Material_Material_Number_Key").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="1638,54898" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="" DisplayName="Sequence - Process Steps" sap:VirtualizedContainerService.HintSize="1600,54639" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message - Transaction Reference" sap:VirtualizedContainerService.HintSize="1538,101" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Transaction Reference: &quot;+ in_TransactionItem.SpecificContent(&quot;Storage_Bin_Key&quot;).ToString]" />
          <Sequence DisplayName="Sequence - Skip Completed Items" sap:VirtualizedContainerService.HintSize="1538,90" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign - StepType" sap:VirtualizedContainerService.HintSize="579,70" sap2010:WorkflowViewState.IdRef="Assign_146">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[StepType]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Skip Completed</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign - StepNumber" sap:VirtualizedContainerService.HintSize="579,70" sap2010:WorkflowViewState.IdRef="Assign_147">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap:VirtualizedContainerService.HintSize="579,70" sap2010:WorkflowViewState.IdRef="Assign_230">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[""]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[String.IsNullOrEmpty(in_TransactionItem.SpecificContent(&quot;Status&quot;).ToString)]" DisplayName="If - Status is empty?" sap:VirtualizedContainerService.HintSize="579,269" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,101" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Status empty. Working transaction.&quot;]" />
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw  - BRE Skip Completed Item" Exception="[new BusinessRuleException(&quot;Skip Completed Item&quot;)]" sap:VirtualizedContainerService.HintSize="200,32" sap2010:WorkflowViewState.IdRef="Throw_3" />
              </If.Else>
            </If>
          </Sequence>
          <Sequence DisplayName="Sequence - Pre-sorting Steps" sap:VirtualizedContainerService.HintSize="1538,19510" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign - StepType = Pre-Sorting" sap:VirtualizedContainerService.HintSize="1476,70" sap2010:WorkflowViewState.IdRef="Assign_110">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[StepType]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Pre-sorting</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign - StepNumber" sap:VirtualizedContainerService.HintSize="1476,70" sap2010:WorkflowViewState.IdRef="Assign_148">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence sap2010:Annotation.AnnotationText="Remove Rows where Total Stock is negative" DisplayName="Sequence - Pre-sorting 1" sap:VirtualizedContainerService.HintSize="1476,1048" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Double" Name="TotalStock" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_111">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - TotalStock" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">[TotalStock]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">[CDbl(in_TransactionItem.SpecificContent("Total_Stock").ToString.Trim)]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[TotalStock &lt;= 0.00]" DisplayName="If - Total Stock is negative?" sap:VirtualizedContainerService.HintSize="484,675" sap2010:WorkflowViewState.IdRef="If_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,478" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - Status = BRE" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Business Rule Exception"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(&quot;Status&quot;)=&quot;Business Rule Exception&quot;)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_1" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Identify Lead EPM by VLOOKUP Tech Authority Code - Key against table to return EPM. Mark in new column" DisplayName="Sequence - Pre-sorting 2" sap:VirtualizedContainerService.HintSize="1476,1565" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="TACodeKey" />
                <Variable x:TypeArguments="x:String" Name="EPM" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_112">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - TACodeKey" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[TACodeKey]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Technical_Auth_Code_Key").ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_174">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[EPM]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </Assign.Value>
              </Assign>
              <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_VLOOKUP_Data]" DisplayName="Lookup Data Table - Retrieve EPM" sap:VirtualizedContainerService.HintSize="969,32" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="TA Code" LookupValue="[TACodeKey]" TargetColumnName="EPM">
                <ui:LookupDataTable.CellValue>
                  <OutArgument x:TypeArguments="x:String">[EPM]</OutArgument>
                </ui:LookupDataTable.CellValue>
              </ui:LookupDataTable>
              <If sap2010:Annotation.AnnotationText="LEAD EPM Not Found" Condition="[IsNothing(EPM)]" DisplayName="If - Lead EPM isnt found" sap:VirtualizedContainerService.HintSize="969,727" sap2010:WorkflowViewState.IdRef="If_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,528" sap2010:WorkflowViewState.IdRef="Sequence_103">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction Lead EPM = &quot;No Return&quot;" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_40">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Lead EPM")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["No Return"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_102">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_6">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Lead_EPM</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">[EPM.ToString]</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,528" sap2010:WorkflowViewState.IdRef="Sequence_105">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction Lead EPM" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_10">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Lead_EPM")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[EPM.ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_104">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Lead_EPM</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">[EPM.ToString]</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Else>
              </If>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="969,61" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,284" sap2010:WorkflowViewState.IdRef="Sequence_122">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:WriteCsvFile Encoding="{x:Null}" AddHeaders="True" DataTable="[In_ProcessData]" Delimitator="Comma" DisplayName="Write CSV" FilePath="text.csv" sap:VirtualizedContainerService.HintSize="338,162" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" />
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <ui:AppendCsvFile Encoding="{x:Null}" DataTable="[In_ProcessData]" Delimitator="Comma" DisplayName="Append to CSV" FilePath="text.csv" sap:VirtualizedContainerService.HintSize="969,142" sap2010:WorkflowViewState.IdRef="AppendCsvFile_1" />
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Identify Quality Inspection Stock with a balance above 0." DisplayName="Sequence - Pre-sorting 3" sap:VirtualizedContainerService.HintSize="1476,1287" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="QualityInspectionStock" />
                <Variable x:TypeArguments="x:Double" Name="parsedValue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_113">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Which column need to be consider " DisplayName="Assign - QualityInspectionStock" sap:VirtualizedContainerService.HintSize="484,101" sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[QualityInspectionStock]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Stock_material_In_Quality_Insp_Key").ToString.Trim]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(QualityInspectionStock, &quot;[a-zA-Z]&quot;)]" DisplayName="If - contains alphabet?" sap:VirtualizedContainerService.HintSize="484,267" sap2010:WorkflowViewState.IdRef="If_32">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Assign DisplayName="Assign - remove letters" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[QualityInspectionStock]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[QualityInspectionStock.Substring(0, QualityInspectionStock.Length-3)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
              <Assign DisplayName="Assign - parsedValue for QualityInspectionStock" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_13">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">[parsedValue]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">[CDbl(QualityInspectionStock)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - transaction Quality Inspection" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_14">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Quality_Inspection")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[parsedValue.ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="484,174" sap2010:WorkflowViewState.IdRef="InvokeCode_7">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ColName">Quality_Inspection</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Value">[parsedValue.ToString]</InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
              <ui:AppendCsvFile Encoding="{x:Null}" DataTable="[In_ProcessData]" Delimitator="Comma" DisplayName="Append to CSV" FilePath="text.csv" sap:VirtualizedContainerService.HintSize="484,142" sap2010:WorkflowViewState.IdRef="AppendCsvFile_2" />
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Identify Blocked Stock with value above 0" DisplayName="Sequence - Pre-sorting 4" sap:VirtualizedContainerService.HintSize="1476,910" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="BlockedStock" />
                <Variable x:TypeArguments="x:Double" Name="parsedValue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_114">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - BlockedStock" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_15">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[BlockedStock]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Stock_material_Blocked_Stock_Key").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(BlockedStock, &quot;[a-zA-Z]&quot;)]" DisplayName="If - contains alphabet?" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="If_33">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Assign DisplayName="Assign - remove letters" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_16">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[BlockedStock]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[BlockedStock.Substring(0, BlockedStock.Length-3)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
              <Assign DisplayName="Assign - parsedValue for BlockedStock" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_17">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">[parsedValue]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">[CDbl(BlockedStock)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Which  column need to consider for - blocked" DisplayName="Assign - transaction Blocked" sap:VirtualizedContainerService.HintSize="338,112" sap2010:WorkflowViewState.IdRef="Assign_18">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Blocked")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[parsedValue.ToString]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_8">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ColName">Blocked</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Value">[parsedValue.ToString]</InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Make Material - CFSS UOI Price (Key) Column into a calculable integer" DisplayName="Sequence - Pre-sorting 5" sap:VirtualizedContainerService.HintSize="1476,919" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="UOIPrice" />
                <Variable x:TypeArguments="x:Decimal" Name="parsedValue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_115">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - UOIPrice" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_19">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[UOIPrice]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Material_CFSS_UOI_Price_Key").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - remove letters" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_20">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[UOIPrice]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[UOIPrice.Substring(0, UOIPrice.Length-4)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - parsedValue for UOIPrice" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_21">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Decimal">[parsedValue]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Decimal">[CDec(UOIPrice)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Which column to be considered - Price" DisplayName="Assign - transaction Price (comma seperated)" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="Assign_22">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Price")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[parsedValue.ToString("N")]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_9">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ColName">Price</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Value">[parsedValue.ToString("N")]</InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Multiply New Price total by Total Stock to get Line Value" DisplayName="Sequence - Pre-sorting 6" sap:VirtualizedContainerService.HintSize="1476,919" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Decimal" Name="Price" />
                <Variable x:TypeArguments="x:Double" Name="TotalStock" />
                <Variable x:TypeArguments="x:Decimal" Name="LineValue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_116">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - Price" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_23">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Decimal">[Price]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Decimal">[CDec(in_TransactionItem.SpecificContent("Price").ToString)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - TotalStock" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_27">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">[TotalStock]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">[CDbl(in_TransactionItem.SpecificContent("Total_Stock").ToString.Trim)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - LineValue" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_25">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Decimal">[LineValue]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Decimal">[Price * CDec(TotalStock)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Which column need to consider - LINE VALUE" DisplayName="Assign - transaction Line Value (comma seperated)" sap:VirtualizedContainerService.HintSize="338,112" sap2010:WorkflowViewState.IdRef="Assign_26">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Line_Value")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[LineValue.ToString("N")]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_10">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ColName">Line_Value</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Value">[LineValue.ToString("N")]</InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Identify Year of Assignment" DisplayName="Sequence - Pre-sorting 7" sap:VirtualizedContainerService.HintSize="1476,1309" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="MaterialNumberKey" />
                <Variable x:TypeArguments="ui:GenericValue" Name="YearAssigned" />
                <Variable x:TypeArguments="x:Int32" Name="parsedValue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="1414,70" sap2010:WorkflowViewState.IdRef="Assign_117">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - MaterialNumberKey" sap:VirtualizedContainerService.HintSize="1414,70" sap2010:WorkflowViewState.IdRef="Assign_28">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[MaterialNumberKey]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Material_Material_Number_Key").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_VLOOKUP_Data]" DisplayName="Lookup Data Table - Retrieve Year Assigned" sap:VirtualizedContainerService.HintSize="1414,32" sap2010:WorkflowViewState.IdRef="LookupDataTable_2" LookupColumnName="NSN" LookupValue="[MaterialNumberKey]" TargetColumnName="Year Assigned">
                <ui:LookupDataTable.CellValue>
                  <OutArgument x:TypeArguments="ui:GenericValue">[YearAssigned]</OutArgument>
                </ui:LookupDataTable.CellValue>
              </ui:LookupDataTable>
              <If Condition="[IsNothing(YearAssigned)]" DisplayName="If - YearAssigned isnt found" sap:VirtualizedContainerService.HintSize="1414,864" sap2010:WorkflowViewState.IdRef="If_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,528" sap2010:WorkflowViewState.IdRef="Sequence_107">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction Assigned Year = &quot;No Return&quot;" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_41">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Assigned_Year")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["No Return"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_106">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_11">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Assigned_Year</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">No Return</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(YearAssigned.ToString, &quot;[a-zA-Z]&quot;)]" DisplayName="If - YearAssigned has some letters in it" sap:VirtualizedContainerService.HintSize="907,696" sap2010:WorkflowViewState.IdRef="If_40">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="462,528" sap2010:WorkflowViewState.IdRef="Sequence_109">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign - transaction Assigned Year = &quot;No Return&quot;" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_159">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Assigned_Year")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[YearAssigned]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_108">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_12">
                            <ui:InvokeCode.Arguments>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ColName">Assigned_Year</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Value">[YearAssigned]</InArgument>
                            </ui:InvokeCode.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeCode>
                        </Sequence>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,516" sap2010:WorkflowViewState.IdRef="Sequence_25">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign - parsedValue" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_29">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[parsedValue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[CInt(YearAssigned.ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign - transaction Assigned Year" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_30">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Assigned_Year")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[parsedValue.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_13">
                          <ui:InvokeCode.Arguments>
                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ColName">Assigned_Year</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Value">[parsedValue.ToString]</InArgument>
                          </ui:InvokeCode.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeCode>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Identify Year of last demand" DisplayName="Sequence - Pre-sorting 8" sap:VirtualizedContainerService.HintSize="1476,1309" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="MaterialNumberKey" />
                <Variable x:TypeArguments="ui:GenericValue" Name="LastDemandYear" />
                <Variable x:TypeArguments="x:Int32" Name="parsedValue" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="1414,70" sap2010:WorkflowViewState.IdRef="Assign_118">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - MaterialNumberKey" sap:VirtualizedContainerService.HintSize="1414,70" sap2010:WorkflowViewState.IdRef="Assign_31">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[MaterialNumberKey]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Material_Material_Number_Key").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_VLOOKUP_Data]" DisplayName="Lookup Data Table - Retrieve Last Demand Year" sap:VirtualizedContainerService.HintSize="1414,32" sap2010:WorkflowViewState.IdRef="LookupDataTable_3" LookupColumnName="NSN2" LookupValue="[MaterialNumberKey]" TargetColumnName="Last Demand Year">
                <ui:LookupDataTable.CellValue>
                  <OutArgument x:TypeArguments="ui:GenericValue">[LastDemandYear]</OutArgument>
                </ui:LookupDataTable.CellValue>
              </ui:LookupDataTable>
              <If Condition="[IsNothing(LastDemandYear)]" DisplayName="If - LastDemandYear isnt found or has letters " sap:VirtualizedContainerService.HintSize="1414,864" sap2010:WorkflowViewState.IdRef="If_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,570" sap2010:WorkflowViewState.IdRef="Sequence_111">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap2010:Annotation.AnnotationText="which column needs to consider - LastDemandYear" DisplayName="Assign - transaction Last Demand Year = No Demand" sap:VirtualizedContainerService.HintSize="400,112" sap2010:WorkflowViewState.IdRef="Assign_42">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Last_Demand_Year")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["No Demand"]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_110">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_14">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Last_Demand_Year</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">No Demand</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(LastDemandYear.ToString, &quot;[a-zA-Z]&quot;)]" DisplayName="If - Last Demand Year has some letters in it" sap:VirtualizedContainerService.HintSize="907,696" sap2010:WorkflowViewState.IdRef="If_41">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="462,528" sap2010:WorkflowViewState.IdRef="Sequence_113">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign - transaction Last Demand Year = No Demand" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_160">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Last_Demand_Year")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[LastDemandYear]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_112">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_15">
                            <ui:InvokeCode.Arguments>
                              <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ColName">Last_Demand_Year</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Value">[LastDemandYear]</InArgument>
                            </ui:InvokeCode.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:InvokeCode>
                        </Sequence>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence sap:VirtualizedContainerService.HintSize="400,516" sap2010:WorkflowViewState.IdRef="Sequence_26">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign - parsedValue" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_32">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[parsedValue]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[CInt(LastDemandYear.ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign - transaction Last Demand Year" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_33">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Last_Demand_Year")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">[parsedValue.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_16">
                          <ui:InvokeCode.Arguments>
                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="ColName">Last_Demand_Year</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Value">[parsedValue.ToString]</InArgument>
                          </ui:InvokeCode.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeCode>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Identify those items where SCHC 1 - Key is &quot;A&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;P&quot;, &quot;R&quot;: &quot;Mark as Hazmat&quot;" DisplayName="Sequence - Pre-sorting 9" sap:VirtualizedContainerService.HintSize="1476,1221" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="SCHC" />
                <Variable x:TypeArguments="s:String[]" Name="HazmatIndicators" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_119">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - SCHC" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_34">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[SCHC]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("SCHC_1_Key").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - HazmatIndicators" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_35">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[HazmatIndicators]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[{"A", "C", "D", "E", "P", "R"}]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[HazmatIndicators.Contains(SCHC)]" DisplayName="If - SCHC Key should Mark as Hazmat?" sap:VirtualizedContainerService.HintSize="969,738" sap2010:WorkflowViewState.IdRef="If_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,570" sap2010:WorkflowViewState.IdRef="Sequence_115">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap2010:Annotation.AnnotationText="which column needs to consider - Hazmat" DisplayName="Assign - Mark As Hazmat = Yes" sap:VirtualizedContainerService.HintSize="400,112" sap2010:WorkflowViewState.IdRef="Assign_43">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Mark_As_Hazmat")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Yes"]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_114">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_17">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Mark_As_Hazmat</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">Yes</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,570" sap2010:WorkflowViewState.IdRef="Sequence_117">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap2010:Annotation.AnnotationText="which column needs to consider - Hazmat" DisplayName="Assign - Mark As Hazmat = No" sap:VirtualizedContainerService.HintSize="400,112" sap2010:WorkflowViewState.IdRef="Assign_44">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Mark As Hazmat")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["No"]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_116">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_18">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Mark_As_Hazmat</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">No</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="VLOOKUP Storage Location - Key and return value for Storage Medium in VLOOKUP TableStorage Medium" DisplayName="Sequence - Pre-sorting 10" sap:VirtualizedContainerService.HintSize="1476,1141" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="StorageLocation" />
                <Variable x:TypeArguments="ui:GenericValue" Name="StorageLocationGroup" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_120">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - StorageLocation" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_37">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[StorageLocation]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Location").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_VLOOKUP_Data]" DisplayName="Lookup Data Table - Retrieve Storage Location (Group)" sap:VirtualizedContainerService.HintSize="969,32" sap2010:WorkflowViewState.IdRef="LookupDataTable_4" LookupColumnName="Storage Location" LookupValue="[StorageLocation]" TargetColumnName="Storage Location (Group)">
                <ui:LookupDataTable.CellValue>
                  <OutArgument x:TypeArguments="ui:GenericValue">[StorageLocationGroup]</OutArgument>
                </ui:LookupDataTable.CellValue>
              </ui:LookupDataTable>
              <If Condition="[IsNothing(StorageLocationGroup)]" DisplayName="If - StorageLocationGroup isnt found" sap:VirtualizedContainerService.HintSize="969,696" sap2010:WorkflowViewState.IdRef="If_7">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,528" sap2010:WorkflowViewState.IdRef="Sequence_119">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction Storage Location Group" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_45">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Storage_Location_Group")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["No Return"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_118">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_19">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Storage_Location_Group</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">No Return</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,528" sap2010:WorkflowViewState.IdRef="Sequence_121">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction Storage Location Group" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_38">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Storage_Location_Group")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[StorageLocationGroup.ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_120">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_20">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Storage_Location_Group</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">[StorageLocation]</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Determine Storage Medium" DisplayName="Sequence - Pre-sorting 11" sap:VirtualizedContainerService.HintSize="1476,1419" sap2010:WorkflowViewState.IdRef="Sequence_87">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="StorageLocation" />
                <Variable x:TypeArguments="x:String" Name="StorageMedium" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="907,70" sap2010:WorkflowViewState.IdRef="Assign_175">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - StorageLocation" sap:VirtualizedContainerService.HintSize="907,70" sap2010:WorkflowViewState.IdRef="Assign_176">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[StorageLocation]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Location").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[StorageLocation.Substring(0,2) = &quot;25&quot;]" DisplayName="If storage location is in 25 CFSD" sap:VirtualizedContainerService.HintSize="907,432" sap2010:WorkflowViewState.IdRef="If_46">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Sequence - Handle 25 CFSD" sap:VirtualizedContainerService.HintSize="400,264" sap2010:WorkflowViewState.IdRef="Sequence_88">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="StorageTypeKey" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - StorageTypeKey" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_179">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[StorageTypeKey]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Type_Key").ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_VLOOKUP_Data]" DisplayName="Lookup Data Table - Storage Medium (Name)" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="LookupDataTable_6" LookupColumnName="Storage Type - Key" LookupValue="[StorageTypeKey]" TargetColumnName="Storage Medium (25CFSD)">
                      <ui:LookupDataTable.CellValue>
                        <OutArgument x:TypeArguments="x:String">[StorageMedium]</OutArgument>
                      </ui:LookupDataTable.CellValue>
                    </ui:LookupDataTable>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Sequence - Handle 7 CFSD" sap:VirtualizedContainerService.HintSize="400,264" sap2010:WorkflowViewState.IdRef="Sequence_89">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="StorageBinTypeKey" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - StorageBinTypeKey" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_180">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[StorageBinTypeKey]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Bin_Type_Key_Not_Compounded").ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_VLOOKUP_Data]" DisplayName="Lookup Data Table - Storage Medium (Name)" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="LookupDataTable_7" LookupColumnName="Storage Bin Type - Key (Not Compounded)" LookupValue="[StorageBinTypeKey]" TargetColumnName="Storage Medium (7CFSD)">
                      <ui:LookupDataTable.CellValue>
                        <OutArgument x:TypeArguments="x:String">[StorageMedium]</OutArgument>
                      </ui:LookupDataTable.CellValue>
                    </ui:LookupDataTable>
                  </Sequence>
                </If.Else>
              </If>
              <If Condition="[IsNothing(StorageMedium)]" DisplayName="If - StorageMedium isnt found" sap:VirtualizedContainerService.HintSize="907,574" sap2010:WorkflowViewState.IdRef="If_45">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,406" sap2010:WorkflowViewState.IdRef="Sequence_123">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction Storage Medium No Return" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_177">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Storage_Medium")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["#N/A"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_21">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Storage_Medium</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">#N/A</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,322" sap2010:WorkflowViewState.IdRef="Sequence_125">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction Storage Medium" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_178">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Storage_Medium")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[StorageMedium.ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_124">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_22">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Storage_Medium</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">[StorageMedium.ToString]</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Determine Size factor" DisplayName="Sequence - Pre-sorting 12" sap:VirtualizedContainerService.HintSize="1476,1170" sap2010:WorkflowViewState.IdRef="Sequence_92">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="StorageLocation" />
                <Variable x:TypeArguments="x:Double" Name="SizeFactor" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_181">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - StorageLocation" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_182">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[StorageLocation]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Location").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="969,61" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <If Condition="[StorageLocation.Substring(0,2) = &quot;25&quot;]" DisplayName="If storage location is in 25 CFSD" sap:VirtualizedContainerService.HintSize="845,432" sap2010:WorkflowViewState.IdRef="If_47">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Sequence - Handle 25 CFSD" sap:VirtualizedContainerService.HintSize="400,264" sap2010:WorkflowViewState.IdRef="Sequence_90">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="StorageTypeKey" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign - StorageTypeKey" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_183">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[StorageTypeKey]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Type_Key").ToString.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_VLOOKUP_Data]" DisplayName="Lookup Data Table - SizeFactor (25)" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="LookupDataTable_8" LookupColumnName="Storage Type - Key" LookupValue="[StorageTypeKey]" TargetColumnName="Cubic Metre (25CFSD)">
                          <ui:LookupDataTable.CellValue>
                            <OutArgument x:TypeArguments="x:Double">[SizeFactor]</OutArgument>
                          </ui:LookupDataTable.CellValue>
                        </ui:LookupDataTable>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Sequence - Handle 7 CFSD" sap:VirtualizedContainerService.HintSize="400,264" sap2010:WorkflowViewState.IdRef="Sequence_91">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="StorageBinTypeKey" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign - StorageBinTypeKey" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_184">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[StorageBinTypeKey]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Bin_Type_Key_Not_Compounded").ToString.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_VLOOKUP_Data]" DisplayName="Lookup Data Table - SizeFactor (7)" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="LookupDataTable_9" LookupColumnName="Storage Bin Type - Key (Not Compounded)" LookupValue="[StorageBinTypeKey]" TargetColumnName="Cubic Metre (7CFSD)">
                          <ui:LookupDataTable.CellValue>
                            <OutArgument x:TypeArguments="x:Double">[SizeFactor]</OutArgument>
                          </ui:LookupDataTable.CellValue>
                        </ui:LookupDataTable>
                      </Sequence>
                    </If.Else>
                  </If>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="849,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Assign DisplayName="Assign - transaction SizeFactor  No Return" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_204">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Double">[SizeFactor]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Double">1</InArgument>
                        </Assign.Value>
                      </Assign>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <If Condition="[IsNothing(SizeFactor)]" DisplayName="If - SizeFactor isnt found" sap:VirtualizedContainerService.HintSize="969,696" sap2010:WorkflowViewState.IdRef="If_48">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,528" sap2010:WorkflowViewState.IdRef="Sequence_127">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction SizeFactor  No Return" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_185">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Size_factor")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["1"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_126">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_23">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Size_factor</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">1</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,528" sap2010:WorkflowViewState.IdRef="Sequence_129">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction SizeFactor" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_186">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Size_factor")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[SizeFactor.ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_128">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_24">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">Size_factor</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">[SizeFactor.ToString]</InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Determine Storage &amp; Bin" DisplayName="Sequence - Pre-sorting 13" sap:VirtualizedContainerService.HintSize="1476,1277" sap2010:WorkflowViewState.IdRef="Sequence_95">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="StorageLocation" />
                <Variable x:TypeArguments="x:String" Name="PalletEquivalent" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="845,70" sap2010:WorkflowViewState.IdRef="Assign_187">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - StorageLocation" sap:VirtualizedContainerService.HintSize="845,70" sap2010:WorkflowViewState.IdRef="Assign_188">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[StorageLocation]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Location").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[StorageLocation.Substring(0,2) = &quot;25&quot;]" DisplayName="If storage location is in 25 CFSD" sap:VirtualizedContainerService.HintSize="845,904" sap2010:WorkflowViewState.IdRef="If_49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Sequence - Handle 25 CFSD" sap:VirtualizedContainerService.HintSize="400,736" sap2010:WorkflowViewState.IdRef="Sequence_93">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="StorageTypeKey" />
                      <Variable x:TypeArguments="x:String" Name="StorageBinKey" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - StorageTypeKey" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_189">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[StorageTypeKey]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Type_Key").ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign - StorageBinKey" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_193">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[StorageBinKey]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Bin_Key").ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign - transaction Storage &amp; Bin" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_194">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Storage_Bin")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[StorageTypeKey &amp; " - " &amp; StorageBinKey]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_232">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[sbin]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[StorageTypeKey+" - "+StorageBinKey]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_60">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">
                          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="In_ProcessData" />
                        </InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                          <mva:VisualBasicValue x:TypeArguments="ui:QueueItem" ExpressionText="in_TransactionItem" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="MNkey" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">
                          <Literal x:TypeArguments="x:String">Storage_Bin</Literal>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="sbin" />
                        </InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Sequence - Handle 7 CFSD" sap:VirtualizedContainerService.HintSize="400,736" sap2010:WorkflowViewState.IdRef="Sequence_94">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="StorageBinTypeKey" />
                      <Variable x:TypeArguments="x:String" Name="StorageBinKey" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - StorageBinTypeKey" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_190">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[StorageBinTypeKey]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Bin_Type_Key_Not_Compounded").ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign - StorageBinKey" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_195">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[StorageBinKey]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Bin_Key").ToString.Trim]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign - transaction Storage &amp; Bin" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_196">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Storage_Bin")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">[StorageBinTypeKey &amp; " - " &amp; StorageBinKey]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_233">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[sbin]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[StorageBinTypeKey +" - " +StorageBinKey]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_61">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">
                          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="In_ProcessData" />
                        </InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                          <mva:VisualBasicValue x:TypeArguments="ui:QueueItem" ExpressionText="in_TransactionItem" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="MNkey" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">
                          <Literal x:TypeArguments="x:String">Storage_Bin</Literal>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="sbin" />
                        </InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Determine Count" DisplayName="Sequence - Pre-sorting 14" sap:VirtualizedContainerService.HintSize="1476,861" sap2010:WorkflowViewState.IdRef="Sequence_96">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="ColumnNumber" />
                <Variable x:TypeArguments="x:String" Name="ColumnLetter" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_197">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Excel Column number to add and which column need tp consider" DisplayName="Assign - ColumnNumber" sap:VirtualizedContainerService.HintSize="338,112" sap2010:WorkflowViewState.IdRef="Assign_199">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[ColumnNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32" xml:space="preserve">[In_ProcessData.Columns.IndexOf("Storage &amp;  Bin") + 1]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Excel_ColumnNumberToLetter workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" UnSafe="False" WorkflowFileName="Excel_ColumnNumberToLetter.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_ColumnNumber">[ColumnNumber]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_ColumnLetter">[ColumnLetter]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Assign DisplayName="Assign - transaction Count" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_198">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Count")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object" xml:space="preserve">["=COUNTIF(" &amp; ColumnLetter &amp; ":"  &amp; ColumnLetter &amp; ",INDIRECT(""" &amp; ColumnLetter &amp; """&amp;ROW()))"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_27">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ColName">Count</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Value" xml:space="preserve">["=COUNTIF(" &amp; ColumnLetter &amp; ":"  &amp; ColumnLetter &amp; ",INDIRECT(""" &amp; ColumnLetter &amp; """&amp;ROW()))"]</InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Determine Cubic Metres" DisplayName="Sequence - Pre-sorting 15" sap:VirtualizedContainerService.HintSize="1476,1153" sap2010:WorkflowViewState.IdRef="Sequence_97">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="SizeFactorColumnNumber" />
                <Variable x:TypeArguments="x:String" Name="SizeFactorColumnLetter" />
                <Variable x:TypeArguments="x:Int32" Name="CountColumnNumber" />
                <Variable x:TypeArguments="x:String" Name="CountColumnLetter" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_200">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Excel column" DisplayName="Assign - SizeFactorColumnNumber" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="Assign_201">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[SizeFactorColumnNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[In_ProcessData.Columns.IndexOf("Size factor") + 1]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Excel_ColumnNumberToLetter workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="Excel_ColumnNumberToLetter.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_ColumnNumber">[SizeFactorColumnNumber]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_ColumnLetter">[SizeFactorColumnLetter]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Assign sap2010:Annotation.AnnotationText="Excel Column to be added" DisplayName="Assign - SizeFactorColumnNumber" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="Assign_203">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[CountColumnNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[In_ProcessData.Columns.IndexOf("Count") + 1]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Excel_ColumnNumberToLetter workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_34" UnSafe="False" WorkflowFileName="Excel_ColumnNumberToLetter.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="in_ColumnNumber">[CountColumnNumber]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_ColumnLetter">[CountColumnLetter]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Assign DisplayName="Assign - transaction Count" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_202">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Cubic_Metres")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">["=" &amp; "INDIRECT(""" &amp; SizeFactorColumnLetter &amp; """&amp;ROW())" &amp; "/" &amp; "INDIRECT(""" &amp; CountColumnLetter &amp; """&amp;ROW())"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_28">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ColName">Cubic_Metres</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Value">["=" &amp; "INDIRECT(""" &amp; SizeFactorColumnLetter &amp; """&amp;ROW())" &amp; "/" &amp; "INDIRECT(""" &amp; CountColumnLetter &amp; """&amp;ROW())"]</InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Determine 25 CFSD Bin Structure" DisplayName="Sequence - Pre-sorting 16" sap:VirtualizedContainerService.HintSize="1476,899" sap2010:WorkflowViewState.IdRef="Sequence_98">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="SizeFactorColumnNumber" />
                <Variable x:TypeArguments="x:String" Name="SizeFactorColumnLetter" />
                <Variable x:TypeArguments="x:Int32" Name="CountColumnNumber" />
                <Variable x:TypeArguments="x:String" Name="CountColumnLetter" />
                <Variable x:TypeArguments="x:String" Name="PatternFound" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_205">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Excecl column add" DisplayName="Assign - SizeFactorColumnNumber" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="Assign_206">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[SizeFactorColumnNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[In_ProcessData.Columns.IndexOf("Size factor") + 1]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <Assign DisplayName="Assign - Initialize Pattern" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_214">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[PatternFound]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">None</InArgument>
                </Assign.Value>
              </Assign>
              <Flowchart DisplayName="Flowchart - Series of Pattern Matching" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Flowchart_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <av:Point x:Key="ShapeLocation">430,12.4</av:Point>
                    <av:Size x:Key="ShapeSize">60,75</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">460,87.6 460,156.4</av:PointCollection>
                    <x:Double x:Key="Width">1115.8658634378605</x:Double>
                    <x:Double x:Key="Height">756.94634936252862</x:Double>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Flowchart.StartNode>
                  <x:Reference>__ReferenceID7</x:Reference>
                </Flowchart.StartNode>
                <FlowDecision x:Name="__ReferenceID7" Condition="[System.Text.RegularExpressions.Regex.IsMatch(in_TransactionItem.SpecificContent(&quot;Storage_Bin_Key&quot;).ToString,&quot;^\d{3}[a-zA-Z]{1,2}\d{3}[a-zA-Z]?\d{0,2}$&quot;) and Not (New String(){&quot;PAS&quot;, &quot;DIS&quot;, &quot;GDM&quot;, &quot;QA1&quot;, &quot;QUA&quot;}.Contains(in_TransactionItem.SpecificContent(&quot;Storage_Type_Key&quot;).ToString))]" DisplayName="25 CFSD – Standard Bin Nomenclature" sap:VirtualizedContainerService.HintSize="160,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">380,156.4</av:Point>
                      <av:Size x:Key="ShapeSize">160,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">380,199.9 350,199.9 350,205 310.8,205</av:PointCollection>
                      <av:PointCollection x:Key="FalseConnector">540,200 610,200 610,286.4</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID0">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">48.8,170</av:Point>
                          <av:Size x:Key="ShapeSize">262,70</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign DisplayName="Assign - PatternFound is 25 CFSD – Standard Bin Nomenclature" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_209">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[PatternFound]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">25 CFSD – Standard Bin Nomenclature</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowDecision x:Name="__ReferenceID1" Condition="[System.Text.RegularExpressions.Regex.IsMatch(in_TransactionItem.SpecificContent(&quot;Storage_Bin_Key&quot;).ToString,&quot;^SEA\d{3}$&quot;) and in_TransactionItem.SpecificContent(&quot;Storage_Type_Key&quot;).ToString.Equals(&quot;CHH&quot;)]" DisplayName="25 CFSD – Known and Accepted Exceptions (Tarmac – Sea Cans)" sap:VirtualizedContainerService.HintSize="160,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">530,286.4</av:Point>
                          <av:Size x:Key="ShapeSize">160,87</av:Size>
                          <av:PointCollection x:Key="TrueConnector">530,329.9 500,329.9 500,335 440.8,335</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">690,330 770,330 770,396.4</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">178.8,300</av:Point>
                              <av:Size x:Key="ShapeSize">262,70</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign - PatternFound is 25 CFSD – Known and Accepted Exceptions (Tarmac – Sea Cans)" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_215">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[PatternFound]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">25 CFSD – Known and Accepted Exceptions (Tarmac – Sea Cans)</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowDecision x:Name="__ReferenceID2" Condition="[System.Text.RegularExpressions.Regex.IsMatch(in_TransactionItem.SpecificContent(&quot;Storage_Bin_Key&quot;).ToString,&quot;^CU0*\d{7}$&quot;) and in_TransactionItem.SpecificContent(&quot;Storage_Type_Key&quot;).ToString.Equals(&quot;RTC&quot;)]" DisplayName="25 CFSD – Known and Accepted Exceptions (RTC Laval)" sap:VirtualizedContainerService.HintSize="160,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">690,396.4</av:Point>
                              <av:Size x:Key="ShapeSize">160,87</av:Size>
                              <av:PointCollection x:Key="TrueConnector">690,439.9 660,439.9 660,445 590.8,445</av:PointCollection>
                              <av:PointCollection x:Key="FalseConnector">850,440 900,440 900,506.4</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <FlowDecision.True>
                            <FlowStep x:Name="__ReferenceID5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">328.8,410</av:Point>
                                  <av:Size x:Key="ShapeSize">262,70</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign - PatternFound is 25 CFSD – Known and Accepted Exceptions (RTC Laval)" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_216">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[PatternFound]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">25 CFSD – Known and Accepted Exceptions (RTC Laval)</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                            </FlowStep>
                          </FlowDecision.True>
                          <FlowDecision.False>
                            <FlowDecision x:Name="__ReferenceID3" Condition="[System.Text.RegularExpressions.Regex.IsMatch(in_TransactionItem.SpecificContent(&quot;Storage_Bin_Key&quot;).ToString,&quot;^LVL[a-zA-Z]\d{3}$&quot;) and in_TransactionItem.SpecificContent(&quot;Storage_Type_Key&quot;).ToString.Equals(&quot;RTC&quot;)]" DisplayName="25 CFSD – Known and Accepted Exceptions (RTC Laval)" sap:VirtualizedContainerService.HintSize="160,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">820,506.4</av:Point>
                                  <av:Size x:Key="ShapeSize">160,87</av:Size>
                                  <av:PointCollection x:Key="TrueConnector">820,549.9 790,549.9 790,555 720.8,555</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">458.8,520</av:Point>
                                      <av:Size x:Key="ShapeSize">262,70</av:Size>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign - PatternFound is 25 CFSD – Known and Accepted Exceptions (RTC Laval)" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_217">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[PatternFound]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">25 CFSD – Known and Accepted Exceptions (RTC Laval)</InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                </FlowStep>
                              </FlowDecision.True>
                            </FlowDecision>
                          </FlowDecision.False>
                        </FlowDecision>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowDecision.False>
                </FlowDecision>
                <x:Reference>__ReferenceID0</x:Reference>
                <x:Reference>__ReferenceID1</x:Reference>
                <x:Reference>__ReferenceID2</x:Reference>
                <x:Reference>__ReferenceID3</x:Reference>
                <x:Reference>__ReferenceID4</x:Reference>
                <x:Reference>__ReferenceID5</x:Reference>
                <x:Reference>__ReferenceID6</x:Reference>
              </Flowchart>
              <Assign DisplayName="Assign - transaction 25 CFSD Bin Structure" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_208">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("25 CFSD Bin Structure")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[PatternFound.ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_29">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ColName">25_CFSD_Bin_Structure</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Value">[PatternFound.ToString]</InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Determine Transit Bin" DisplayName="Sequence - Pre-sorting 17" sap:VirtualizedContainerService.HintSize="1476,121" sap2010:WorkflowViewState.IdRef="Sequence_99">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="SizeFactorColumnNumber" />
                <Variable x:TypeArguments="x:String" Name="SizeFactorColumnLetter" />
                <Variable x:TypeArguments="x:Int32" Name="CountColumnNumber" />
                <Variable x:TypeArguments="x:String" Name="CountColumnLetter" />
                <Variable x:TypeArguments="x:String" Name="StorageTypeKey" />
                <Variable x:TypeArguments="x:String" Name="TransitBin" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="569,70" sap2010:WorkflowViewState.IdRef="Assign_218">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:Annotation.AnnotationText="Excel column" DisplayName="Assign - SizeFactorColumnNumber" sap:VirtualizedContainerService.HintSize="569,101" sap2010:WorkflowViewState.IdRef="Assign_219">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[SizeFactorColumnNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[In_ProcessData.Columns.IndexOf("Size factor") + 1]</InArgument>
                </Assign.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Assign>
              <Assign DisplayName="Assign - Storage Type Key" sap:VirtualizedContainerService.HintSize="569,70" sap2010:WorkflowViewState.IdRef="Assign_226">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[StorageTypeKey]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Storage_Type_Key").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[New String(){&quot;HPT&quot;,&quot;PAS&quot;,&quot;PHA&quot;,&quot;QA1&quot;,&quot;QUA&quot;,&quot;902&quot;,&quot;916&quot;,&quot;917&quot;,&quot;920&quot;,&quot;922&quot;,&quot;923&quot;,&quot;960&quot;,&quot;999&quot;}.Contains(StorageTypeKey)]" DisplayName="If Storage Bin Key is in the Transit Bin list" sap:VirtualizedContainerService.HintSize="569,238" sap2010:WorkflowViewState.IdRef="If_50">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Assign DisplayName="Assign - TransitBin" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_228">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[TransitBin]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Yes</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
                <If.Else>
                  <Assign DisplayName="Assign - TransitBin" sap:VirtualizedContainerService.HintSize="262,70" sap2010:WorkflowViewState.IdRef="Assign_227">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[TransitBin]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">No</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Else>
              </If>
              <Assign DisplayName="Assign - transaction Transit Bin" sap:VirtualizedContainerService.HintSize="569,70" sap2010:WorkflowViewState.IdRef="Assign_229">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Transit_Bin")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[TransitBin]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="569,174" sap2010:WorkflowViewState.IdRef="InvokeCode_30">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ColName">Transit_Bin</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Value">[TransitBin]</InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
            </Sequence>
          </Sequence>
          <Sequence DisplayName="Sequence - Query Steps" sap:VirtualizedContainerService.HintSize="1538,34665" sap2010:WorkflowViewState.IdRef="Sequence_101">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign - StepType = Query" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_149">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[StepType]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Query</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign - StepNumber" sap:VirtualizedContainerService.HintSize="969,70" sap2010:WorkflowViewState.IdRef="Assign_150">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Sequence sap2010:Annotation.AnnotationText="On Greatest Hits List" DisplayName="Sequence - Query 1" sap:VirtualizedContainerService.HintSize="969,1687" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="MaterialNumberKey" />
                <Variable x:TypeArguments="ui:GenericValue" Name="Tranche1" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="907,70" sap2010:WorkflowViewState.IdRef="Assign_121">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - MaterialNumberKey" sap:VirtualizedContainerService.HintSize="907,70" sap2010:WorkflowViewState.IdRef="Assign_47">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[MaterialNumberKey]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Material_Material_Number_Key").ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[in_VLOOKUP_Data]" DisplayName="Lookup Data Table - Retrieve Tranche1" sap:VirtualizedContainerService.HintSize="907,32" sap2010:WorkflowViewState.IdRef="LookupDataTable_5" LookupColumnName="Greatest Hits Tranche 1" LookupValue="[MaterialNumberKey]" TargetColumnName="Greatest Hits Tranche 1">
                <ui:LookupDataTable.CellValue>
                  <OutArgument x:TypeArguments="ui:GenericValue">[Tranche1]</OutArgument>
                </ui:LookupDataTable.CellValue>
              </ui:LookupDataTable>
              <If Condition="[IsNothing(Tranche1)]" DisplayName="If - Tranche1 isnt found" sap:VirtualizedContainerService.HintSize="907,1242" sap2010:WorkflowViewState.IdRef="If_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="462,528" sap2010:WorkflowViewState.IdRef="Sequence_131">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction Tranche 1? = &quot;No&quot;" sap:VirtualizedContainerService.HintSize="400,70" sap2010:WorkflowViewState.IdRef="Assign_48">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Tranche_1")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["No"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,296" sap2010:WorkflowViewState.IdRef="Sequence_130">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_31">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">
                            <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="In_ProcessData" />
                          </InOutArgument>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                            <mva:VisualBasicValue x:TypeArguments="ui:QueueItem" ExpressionText="in_TransactionItem" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="MNkey">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="MNkey" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="ColName">
                            <Literal x:TypeArguments="x:String">Tranche_1?</Literal>
                          </InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="Value">
                            <Literal x:TypeArguments="x:String">No</Literal>
                          </InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                    </Sequence>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,1074" sap2010:WorkflowViewState.IdRef="Sequence_28">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - transaction Tranche 1? = &quot;Yes&quot;" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_51">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Tranche_1")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Yes"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_32">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">
                          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="In_ProcessData" />
                        </InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                          <mva:VisualBasicValue x:TypeArguments="ui:QueueItem" ExpressionText="in_TransactionItem" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="MNkey" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">
                          <Literal x:TypeArguments="x:String">Tranche_1?</Literal>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">
                          <Literal x:TypeArguments="x:String">Yes</Literal>
                        </InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_52">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">GHL</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_53">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_33">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">
                          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="In_ProcessData" />
                        </InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                          <mva:VisualBasicValue x:TypeArguments="ui:QueueItem" ExpressionText="in_TransactionItem" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="MNkey" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">
                          <Literal x:TypeArguments="x:String">Status</Literal>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">
                          <Literal x:TypeArguments="x:String">Successful</Literal>
                        </InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_31" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Material - Lead IMA = 1B and Stock Type Supply = D" DisplayName="Sequence - Query 2" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_29">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_122">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;1B&quot; And in_TransactionItem.SpecificContent(&quot;Material_Stock_Type_Supply_Key&quot;).ToString.Trim = &quot;D&quot;]" DisplayName="If - Material - Lead IMA = 1B and Stock Type Supply = D" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_30">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_54">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">1BD</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_55">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_34">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">
                          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="In_ProcessData" />
                        </InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                          <mva:VisualBasicValue x:TypeArguments="ui:QueueItem" ExpressionText="in_TransactionItem" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="MNkey" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">
                          <Literal x:TypeArguments="x:String">Status</Literal>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">
                          <Literal x:TypeArguments="x:String">Successful</Literal>
                        </InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_32" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="In Repairable Reserve or Not Serviceable and Consumable and &lt;$25k" DisplayName="Sequence - Query 3" sap:VirtualizedContainerService.HintSize="969,1214" sap2010:WorkflowViewState.IdRef="Sequence_31">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_123">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[(in_TransactionItem.SpecificContent(&quot;Storage_Location_Group&quot;).ToString.Trim.ToLower.Contains(&quot;repairable reserve&quot;) Or in_TransactionItem.SpecificContent(&quot;Storage_Location_Group&quot;).ToString.Trim.ToLower.Contains(&quot;not serviceable&quot;)) _&#xD;&#xA;And&#xD;&#xA;in_TransactionItem.SpecificContent(&quot;Material_Stock_Classification_Text&quot;).ToString.Trim.ToLower.Contains(&quot;consumable&quot;) _&#xD;&#xA;And CDec(in_TransactionItem.SpecificContent(&quot;Price&quot;).ToString.Trim) &lt; 25000.00]" DisplayName="If " sap:VirtualizedContainerService.HintSize="484,951" sap2010:WorkflowViewState.IdRef="If_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_32">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_56">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">RR&amp;NS_C</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_57">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_35">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">
                          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="In_ProcessData" />
                        </InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">
                          <mva:VisualBasicValue x:TypeArguments="ui:QueueItem" ExpressionText="in_TransactionItem" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">
                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="MNkey" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">
                          <Literal x:TypeArguments="x:String">Status</Literal>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">
                          <Literal x:TypeArguments="x:String">Successful</Literal>
                        </InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_33" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="In Repairable Reserve OR Not Serviceable and Unrepairable where Stock Classification is Accountable and &lt;$25k" DisplayName="Sequence - Query 4" sap:VirtualizedContainerService.HintSize="969,1225" sap2010:WorkflowViewState.IdRef="Sequence_34">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_124">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[(in_TransactionItem.SpecificContent(&quot;Storage_Location_Group&quot;).ToString.Trim.ToLower.Contains(&quot;repairable reserve&quot;) Or in_TransactionItem.SpecificContent(&quot;Storage_Location_Group&quot;).ToString.Trim.ToLower.Contains(&quot;not serviceable&quot;)) _&#xD;&#xA;And in_TransactionItem.SpecificContent(&quot;Material_Repair_Code_Text&quot;).ToString.Trim.ToLower.Contains(&quot;non-repairable&quot;) _&#xD;&#xA;And in_TransactionItem.SpecificContent(&quot;Material_Stock_Classification_Text&quot;).ToString.Trim.ToLower.Contains(&quot;accountable&quot;) _&#xD;&#xA;And CDec(in_TransactionItem.SpecificContent(&quot;Price&quot;).ToString.Trim) &lt; 25000.00]" DisplayName="If" sap:VirtualizedContainerService.HintSize="484,951" sap2010:WorkflowViewState.IdRef="If_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_33">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_58">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">RR&amp;NS&amp;UR_A</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_59">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_36">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_56" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Material - Lead IMA = 1B and Stock Type Supply = G" DisplayName="Sequence - Query 5" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_36">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_125">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;1B&quot; And in_TransactionItem.SpecificContent(&quot;Material_Stock_Type_Supply_Key&quot;).ToString.Trim = &quot;G&quot;]" DisplayName="If - Material - Lead IMA = 1B and Stock Type Supply = G" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_35">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_60">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">1BG</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_61">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_37">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_57" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Material - Lead IMA is 4L (Locally managed/procured - not to be held at depot" DisplayName="Sequence - Query 6" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_82">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_161">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;4L&quot;]" DisplayName="If - Material - Lead IMA is 4L (Locally managed/procured - not to be held at depot" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_42">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_81">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_162">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">IMA 4L [Local Proc]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_163">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_38">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_79" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="TA indicates Not Subject to Technical Compliance and &lt;$25k" DisplayName="Sequence - Query 7" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_84">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_164">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Technical_Auth_Code_Key&quot;).ToString.Trim = &quot;NSTC&quot; And CDec(in_TransactionItem.SpecificContent(&quot;Price&quot;).ToString.Trim) &lt; 25000.00]" DisplayName="If - Technical Auth. Code - Key (column R) has a value of &quot;NSTC&quot; and the item is less than $25k " sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_43">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_83">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_165">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">NSTC</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_166">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_39">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_80" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Material - Lead IMA is 4P (Locally managed/Centrally procured) and &lt;$25k" DisplayName="Sequence - Query 8" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_86">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_167">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;4P&quot; And CDec(in_TransactionItem.SpecificContent(&quot;Price&quot;).ToString.Trim) &lt; 25000.00]" DisplayName="If - Material - Lead IMA (Key) (Column AA) is &quot;4P&quot; and the item is less than $25k" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_44">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_85">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_168">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">IMA 4P [Local Mgmt]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_169">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_40">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_81" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Material - Lead IMA = 1B and Stock Type Supply = P" DisplayName="Sequence - Query 9" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_38">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_126">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;1B&quot; And in_TransactionItem.SpecificContent(&quot;Material_Stock_Type_Supply_Key&quot;).ToString.Trim = &quot;P&quot;]" DisplayName="If - Material - Lead IMA = 1B and Stock Type Supply = P" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_37">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_62">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">1BP</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_63">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_41">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_58" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Storage Type = 999 or 998" DisplayName="Sequence - Query 10" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_40">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_127">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Storage_Type_Key&quot;).ToString.Trim = &quot;999&quot; Or in_TransactionItem.SpecificContent(&quot;Storage_Type_Key&quot;).ToString.Trim = &quot;998&quot;]" DisplayName="If - Storage Type = 999 or 998" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_14">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_39">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_64">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Stck</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_65">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_42">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_59" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Material Stock Type Supply = Z" DisplayName="Sequence - Query 11" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_42">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_128">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Stock_Type_Supply_Key&quot;).ToString.Trim = &quot;Z&quot;]" DisplayName="If - Material Stock Type Supply = Z" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_15">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_41">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_66">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">ST Z</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_67">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_43">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_60" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Material Stock Type = D, G or P, and Material Lead IMA does not = 1B" DisplayName="Sequence - Query 12" sap:VirtualizedContainerService.HintSize="969,1324" sap2010:WorkflowViewState.IdRef="Sequence_44">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:String[]" Name="StockTypes" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_129">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - StockTypes" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_70">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[StockTypes]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[{"D", "G", "P"}]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[StockTypes.Contains(in_TransactionItem.SpecificContent(&quot;Material_Stock_Type_Supply_Key&quot;).ToString.Trim) _&#xA;And in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim &lt;&gt; &quot;1B&quot;]" DisplayName="If - Material Stock Type = D, G or P, and Material Lead IMA does not = 1B" sap:VirtualizedContainerService.HintSize="484,951" sap2010:WorkflowViewState.IdRef="If_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_43">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_68">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">ST DGP</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_69">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_44">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_61" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Storage Location =Disposal locs, item is not Cleared or Under Consideration for Disposal&#xA;&#xA;&#xA;Storage Location = disposal And Cleared is Material - Lead IMA (Key) &lt;&gt; 1B&#xA;OR&#xA;Storage Location = disposal And Cleared is Material - Lead IMA (Key) = 1B And Stock Type is not D G or P " DisplayName="Sequence - Query 13" sap:VirtualizedContainerService.HintSize="969,1410" sap2010:WorkflowViewState.IdRef="Sequence_46">
              <Sequence.Variables>
                <Variable x:TypeArguments="s:String[]" Name="StockTypes" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_130">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - StockTypes" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_101">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[StockTypes]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[{"D", "G", "P"}]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[(in_TransactionItem.SpecificContent(&quot;Storage_Location_Group&quot;).ToString.Trim.ToLower.Contains(&quot;disposal&quot;) _&#xD;&#xA;And in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim &lt;&gt; &quot;1B&quot;) _&#xD;&#xA;Or _&#xD;&#xA;(in_TransactionItem.SpecificContent(&quot;Storage_Location_Group&quot;).ToString.Trim.ToLower.Contains(&quot;disposal&quot;) _&#xD;&#xA;And in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;1B&quot; _&#xD;&#xA;And Not(StockTypes.Contains(in_TransactionItem.SpecificContent(&quot;Material_Stock_Type_Supply_Key&quot;).ToString.Trim)))]" DisplayName="If - Storage Location =Disposal locs, item is not Cleared or Under Consideration for Disposal" sap:VirtualizedContainerService.HintSize="484,951" sap2010:WorkflowViewState.IdRef="If_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_45">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_73">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">SLOC DIS</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_74">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_45">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_62" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Material Repair Code = D (2nd Line Repair) and item is in an Unserviceable location" DisplayName="Sequence - Query 14" sap:VirtualizedContainerService.HintSize="969,1214" sap2010:WorkflowViewState.IdRef="Sequence_48">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_131">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Repair_Code_Key&quot;).ToString.Trim = &quot;D&quot; _&#xD;&#xA;And in_TransactionItem.SpecificContent(&quot;Storage_Location_Group&quot;).ToString.Trim.ToLower.Contains(&quot;repairable reserve&quot;)]" DisplayName="If - Material Repair Code = D (2nd Line Repair) and item is in an Unserviceable location" sap:VirtualizedContainerService.HintSize="484,951" sap2010:WorkflowViewState.IdRef="If_18">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_47">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_75">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">us D</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Private: Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_76">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_46">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_63" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Materiel - Lead IMA is 1J (Demand direct to ATESS)" DisplayName="Sequence - Query 15" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_50">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_132">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;1J&quot;]" DisplayName="If - Materiel - Lead IMA is 1J (Demand direct to ATESS)" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_19">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_49">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_77">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">IMA 1J [ATESS]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_78">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_47">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_64" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Materiel - Lead IMA is 2E or 2F (Held at med or Dent loc only)" DisplayName="Sequence - Query 16" sap:VirtualizedContainerService.HintSize="969,1214" sap2010:WorkflowViewState.IdRef="Sequence_54">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_134">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;2E&quot; _&#xA;Or in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;2F&quot;]" DisplayName="If - Materiel - Lead IMA is 2E or 2F (Held at med or Dent loc only)" sap:VirtualizedContainerService.HintSize="484,951" sap2010:WorkflowViewState.IdRef="If_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_53">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_81">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">IMA 2E or 2F [Med or Dent]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_82">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_48">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_66" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Materiel - Lead IMA is 3A (Held at Prime Contractor only)" DisplayName="Sequence - Query 17" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_56">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_135">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;3A&quot;]" DisplayName="If - Materiel - Lead IMA is 3A (Held at Prime Contractor only)" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_22">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_55">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_83">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">IMA 3A [Prime Contr]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_84">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_49">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_67" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Materiel - Lead IMA is 3B (pre-facilitated contract applies)" DisplayName="Sequence - Query 18" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_58">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_136">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;3B&quot;]" DisplayName="If - Materiel - Lead IMA is 3B (pre-facilitated contract applies)" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_23">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_57">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_85">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["IMA 3B [Pre-Fac Contr]"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_86">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_50">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_68" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Materiel - Lead IMA is 3G (Call up against Standing Offer for specific period/activity)" DisplayName="Sequence - Query 19" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_60">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_137">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;3G&quot;]" DisplayName="If - Materiel - Lead IMA is 3G (Call up against Standing Offer for specific period/activity)" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_24">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_59">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_87">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">["IMA 3G [Standing Offr]"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_88">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_51">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_69" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Material - Lead IMA is 4B (National stock, held in one non-depot loc only)" DisplayName="Sequence - Query 20" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_62">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_138">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;4B&quot;]" DisplayName="If - Material - Lead IMA is 4B (National stock, held in one non-depot loc only)" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_61">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_89">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">IMA 4B [Nat Stock]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_90">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_52">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_70" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Material - Lead IMA is 4T (Electronic Form only - items should be disposed)" DisplayName="Sequence - Query 21" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_66">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_140">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Material_Lead_IMA_Key&quot;).ToString.Trim = &quot;4T&quot;]" DisplayName="If - Material - Lead IMA is 4T (Electronic Form only - items should be disposed)" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_27">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_65">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_93">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">IMA 4T [e-form]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_94">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_53">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_72" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Blocked Stock is &gt;0" DisplayName="Sequence - Query 22" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_68">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_141">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[CDbl(in_TransactionItem.SpecificContent(&quot;Blocked&quot;)) &gt; 0.00]" DisplayName="If - Blocked Stock is &gt;0" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_28">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_67">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_95">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Block</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_96">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_54">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_73" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Quality Inspection &gt;0" DisplayName="Sequence - Query 23" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_70">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_142">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[CDbl(in_TransactionItem.SpecificContent(&quot;Quality_Inspection&quot;)) &gt; 0.00]" DisplayName="If - Quality Inspection &gt;0" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_29">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_69">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_97">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">QI</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_98">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_55">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_74" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Storage Location is Not Serviceable" DisplayName="Sequence - Query 24" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_72">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_143">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Storage_Location_Group&quot;).ToString.Trim.ToLower.Contains(&quot;not serviceable&quot;)]" DisplayName="If - Storage Location has not serviceable" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_30">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_71">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_102">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">NS</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_103">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_56">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_75" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Storage Location is Repairable Reserve" DisplayName="Sequence - Query 25" sap:VirtualizedContainerService.HintSize="969,1210" sap2010:WorkflowViewState.IdRef="Sequence_80">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_155">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[in_TransactionItem.SpecificContent(&quot;Storage_Location_Group&quot;).ToString.Trim.ToLower.Contains(&quot;repairable reserve&quot;)]" DisplayName="If - Storage Location has Repairable Reserve" sap:VirtualizedContainerService.HintSize="484,947" sap2010:WorkflowViewState.IdRef="If_39">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_79">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_156">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">RR</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_157">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_57">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_78" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="Date of Last Demand is earlier than 2017 and Year of Assignment is earlier than 2017" DisplayName="Sequence - Query 26" sap:VirtualizedContainerService.HintSize="969,1324" sap2010:WorkflowViewState.IdRef="Sequence_74">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="DomantQueryRuleYear" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_144">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - DormantQueryRuleYear" sap:VirtualizedContainerService.HintSize="484,70" sap2010:WorkflowViewState.IdRef="Assign_158">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[DomantQueryRuleYear]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[CINT(in_Config("DormantQueryRuleYear").ToString)]</InArgument>
                </Assign.Value>
              </Assign>
              <If Condition="[CInt(If(in_TransactionItem.SpecificContent(&quot;Last_Demand_Year&quot;).ToString=&quot;No Demand&quot;, &quot;0&quot;, in_TransactionItem.SpecificContent(&quot;Last_Demand_Year&quot;).ToString)) &lt; DomantQueryRuleYear _&#xD;&#xA;And CInt(in_TransactionItem.SpecificContent(&quot;Assigned_Year&quot;).ToString) &lt; DomantQueryRuleYear]" DisplayName="If - Date of Last Demand is earlier than 2017 and Year of Assignment is earlier than 2017" sap:VirtualizedContainerService.HintSize="484,951" sap2010:WorkflowViewState.IdRef="If_31">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,750" sap2010:WorkflowViewState.IdRef="Sequence_73">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_104">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">Dormant</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_105">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_58">
                      <ui:InvokeCode.Arguments>
                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                        <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                      </ui:InvokeCode.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeCode>
                    <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_76" />
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence sap2010:Annotation.AnnotationText="All Others" DisplayName="Sequence - Query 27" sap:VirtualizedContainerService.HintSize="969,891" sap2010:WorkflowViewState.IdRef="Sequence_75">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Increment StepNumber" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_145">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[StepNumber]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[StepNumber+1]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - HardCode" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_106">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[HardCode]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Active</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke set_MaterialHealthCategories workflow" sap:VirtualizedContainerService.HintSize="338,122" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="set_MaterialHealthCategories.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="sd:DataTable" x:Key="in_Categories_Data">[in_Categories_Data]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_HardCode">[HardCode]</InArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="io_TransactionData">[in_TransactionItem]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Assign DisplayName="Assign - Status = Successful" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_107">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">["Successful"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="In_ProcessData.AsEnumerable().Where(Function(row) row(&quot;Material_Material_Number_Key&quot;).Equals(MNkey)).ToList.ForEach(sub(row)row(ColName)=Value)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_59">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="In_ProcessData">[In_ProcessData]</InOutArgument>
                  <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="MNkey">[MNkey]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="ColName">Status</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Value">Successful</InArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
              <Throw DisplayName="Throw - BRE" Exception="[new BusinessRuleException(StepType + &quot; &quot; + StepNumber.ToString + &quot; - &quot; + HardCode)]" sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Throw_77" />
            </Sequence>
          </Sequence>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="1604,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="400,440" sap2010:WorkflowViewState.IdRef="Sequence_76">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Robot Message" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_71">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Robot Message")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[exception.Message]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_5" Message="[in_TransactionItem.SpecificContent(&quot;Robot Message&quot;).ToString]" />
              <Assign DisplayName="Assign - Sheet" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_172">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Sheet")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[(StepType + " " + StepNumber.ToString + " " + HardCode).Replace("[","(").Replace("]",")")]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1604,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Sequence - Catch Exception" sap:VirtualizedContainerService.HintSize="400,90" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - Sheet" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_173">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Sheet")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">["Exception"]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - Status = Application Exception" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Status")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">["System Exception"]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign - Robot Message" sap:VirtualizedContainerService.HintSize="338,70" sap2010:WorkflowViewState.IdRef="Assign_72">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[in_TransactionItem.SpecificContent("Robot Message")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[StepType + " " + StepNumber.ToString + ": " + exception.Message]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,101" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[in_TransactionItem.SpecificContent(&quot;Robot Message&quot;).ToString]" />
              <Rethrow sap:VirtualizedContainerService.HintSize="338,32" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>